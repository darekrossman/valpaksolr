// Generated by CoffeeScript 1.6.2
(function() {
  var module;

  module = angular.module('app.controllers', []);

  module.controller('AppController', [
    '$scope', 'ListingFilter', function($scope, ListingFilter) {
      return $scope.listingFilter = ListingFilter;
    }
  ]);

  module.controller('HomeController', ['$scope', function($scope) {}]);

  module.controller('ToolbarController', [
    '$scope', '$route', 'ListingFilter', function($scope, $route, ListingFilter) {
      $scope.layout = ListingFilter.layoutOption;
      if ($route.current.params.keywords) {
        ListingFilter.resultsLabel = "Showing results for: '" + $route.current.params.keywords + "'";
      } else {
        ListingFilter.resultsLabel = $route.current.params.cat;
      }
      return $scope.setLayout = function(layout) {
        ListingFilter.layoutOption = layout;
        $scope.layout = layout;
        return localStorage.setItem('layout_option', layout);
      };
    }
  ]);

  module.controller('SearchController', [
    '$scope', '$location', 'ListingFilter', function($scope, $location, ListingFilter) {
      $scope.listingFilter = ListingFilter;
      return $scope.queryKeyword = function() {
        console.log('QUERYING');
        return $location.url("/search/?keywords=" + ListingFilter.searchText);
      };
    }
  ]);

  module.controller('SidebarController', ['$scope', function($scope) {}]);

  module.controller('ListingController', [
    '$scope', '$location', '$route', '$q', 'KeywordListingLoader', 'CategoryListingsLoader', 'ListingFilter', function($scope, $location, $route, $q, KeywordListingLoader, CategoryListingsLoader, ListingFilter) {
      var delay, getListings;

      $scope.listingFilter = ListingFilter;
      ListingFilter.loading = true;
      if ($route.current.params.keywords) {
        if (localStorage.getItem('search_pizza') && $route.current.params.keywords) {
          delay = $q.defer();
          getListings = delay.promise;
          delay.resolve(JSON.parse(localStorage.getItem('search_pizza')));
        } else {
          getListings = KeywordListingLoader();
          ListingFilter.resultsLabel = "Showing results for: '" + $route.current.params.keywords + "'";
        }
      } else if ($route.current.params.cat) {
        getListings = CategoryListingsLoader();
        ListingFilter.resultsLabel = $route.current.params.cat;
      }
      getListings.then(function(listings) {
        if ($route.current.params.keywords === 'pizza') {
          if (!localStorage.getItem('search_pizza')) {
            JSON.stringify(localStorage.setItem('search_pizza', JSON.stringify(listings)));
            console.log(localStorage.getItem('search_pizza'));
          }
        }
        $scope.listings = [listings.keywordCouponsList, listings.keywordGroceryList, listings.keywordSdcCouponsList, listings.keywordDealsList];
        $scope.couponListings = listings.keywordCouponsList.splice(0, 1);
        $scope.selectedDetail = $scope.listings.selectedDetail;
        $scope.dealsListings = listings.keywordDealsList.splice(0, 1);
        $scope.groceryListings = listings.keywordGroceryList.splice(0, 1);
        $scope.sdcListings = listings.keywordSdcCouponsList.splice(0, 20);
        return ListingFilter.loading = false;
      });
      return $scope.getLogoSrc = function(logo) {
        if (this.listing.slugTypeId !== null) {
          if (this.listing.logoImageFileName) {
            return 'http://www.valpak.com/img/print/' + this.listing.logoImageFileName;
          } else {
            return '/img/defaultLogo.png';
          }
        } else {
          if (this.listing.logoImageFileName) {
            return this.listing.logoImageFileName;
          } else if (this.listing.dealImageURL) {
            return this.listing.dealImageURL;
          } else {
            return '/img/defaultLogo.png';
          }
        }
      };
    }
  ]);

  module.controller('BusinessProfileController', [
    '$scope', '$location', '$route', 'profile', function($scope, $location, $route, profile) {
      $scope.profile = profile;
      $scope.businessGeo = profile.selectedAddressOffer.geoCoordinates;
      return console.log(profile);
    }
  ]);

}).call(this);
