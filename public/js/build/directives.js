// Generated by CoffeeScript 1.6.2
(function() {
  var cnt, module,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  module = angular.module('app.directives', []);

  module.directive('ngTap', function() {
    return function(scope, element, attrs) {
      var tapping;

      tapping = false;
      element.bind('touchstart', function(e) {
        return tapping = true;
      });
      element.bind('touchmove', function(e) {
        return tapping = false;
      });
      return element.bind('touchend', function(e) {
        if (tapping) {
          return scope.$apply(attrs['ngTap'], element);
        }
      });
    };
  });

  module.directive('scrollView', [
    '$rootScope', function($rootScope) {
      return {
        controller: function($scope) {
          return $scope.offsetTop = 0;
        },
        link: function(scope, element, attrs, $rootScope) {
          return element.addClass('scroll-view').bind('scroll', function(e) {
            scope.$apply(scope.offsetTop = element.scrollTop());
            return $rootScope.$broadcast('e:scroll');
          });
        }
      };
    }
  ]);

  cnt = 161;

  module.directive('coupontile', function() {
    return {
      replace: true,
      require: '^scrollView',
      templateUrl: '/partials/coupontile.jade',
      link: function(scope, element, attrs) {
        var isDragging, touchStartX;

        isDragging = false;
        touchStartX = 0;
        element.addClass('tile').addClass("tile-" + attrs.type);
        if (scope.listing.selectedDetail != null) {
          scope.listing.title = scope.listing.selectedDetail.offerText;
        }
        scope.initialOffset = element.offset().top;
        if (false) {
          if (!(__indexOf.call(window, 'ontouchstart') >= 0) || window.DocumentTouch && document instanceof DocumentTouch) {
            return scope.$watch('$parent.offsetTop', function() {
              var scrollTop, tileTop, winH;

              tileTop = element.offset().top;
              scrollTop = scope.$parent.offsetTop;
              winH = angular.element(window).height();
              if (tileTop < winH && tileTop > 0) {
                element.addClass('scroll-visible');
                element.removeClass('scroll-above');
                return element.removeClass('scroll-below');
              } else {
                element.removeClass('scroll-visible');
                if (tileTop < 100) {
                  return element.addClass('scroll-above');
                } else {
                  return element.addClass('scroll-below');
                }
              }
            });
          } else {
            element.addClass('scroll-visible');
            element.parent().hammer().on('dragright', function(ev) {
              ev.gesture.preventDefault();
              if (ev.gesture.distance < 100) {
                return element.removeClass('transition1').css({
                  'transform': 'translateZ(0) translateX(' + Math.round(ev.gesture.distance) + 'px)'
                });
              }
            });
            return element.parent().hammer().on('dragend', function(ev) {
              return element.addClass('transition1').css({
                'transform': 'translateX(0px) translateZ(0)'
              });
            });
          }
        } else {
          return element.addClass('scroll-visible');
        }
      }
    };
  });

  module.directive('gmap', function() {
    return {
      link: function(scope, element, attrs) {
        return element.addClass('gmap').googlemap({
          width: '100%',
          height: '200px',
          zoom: 16,
          locations: [
            {
              lat: scope.businessGeo.latitude,
              lon: scope.businessGeo.longitude,
              primary: true
            }
          ]
        });
      }
    };
  });

  module.directive('couponSearch', [
    'ListingFilter', '$location', function(ListingFilter, $location) {
      return {
        scope: true,
        templateUrl: '/partials/searchbar.jade',
        link: function(scope, element, attrs) {
          var searchField, submitBtn;

          searchField = angular.element(element.find('.search-input'));
          submitBtn = angular.element(element.find('.submit'));
          scope.performSearch = function() {
            searchField.val('').blur();
            return $location.search("keywords=" + ListingFilter.searchTerms);
          };
          return scope.listingFilter = ListingFilter;
        }
      };
    }
  ]);

  module.directive('paginate', [
    function() {
      return {
        require: '^scrollView',
        link: function(scope, element, attrs) {
          return scope.$watch('offsetTop', function(_new, _prev) {});
        }
      };
    }
  ]);

  module.directive('loader', [
    '$rootScope', '$timeout', 'ListingFilter', function($rootScope, $timeout, ListingFilter) {
      return {
        template: '<div><img src="/img/progress.gif"/><p ng-transclude></p></div>',
        transclude: true,
        link: function(scope, element, attrs) {
          var transitionSpeed;

          transitionSpeed = 0;
          scope.listingFilter = ListingFilter;
          element.css({
            'transition-duration': transitionSpeed + 's'
          });
          return element.addClass('loader');
        }
      };
    }
  ]);

}).call(this);
