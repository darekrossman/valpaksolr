// Generated by CoffeeScript 1.6.2
(function() {
  var AppController, BusinessProfileController, HomeController, ListingController, SearchController, SidebarController, ToolbarController, module;

  module = angular.module('app.controllers', []);

  AppController = module.controller('AppController', [
    '$scope', '$location', '$rootScope', '$log', '$route', 'ListingFilter', 'User', 'Dialog', function($scope, $location, $rootScope, $log, $route, ListingFilter, User, Dialog) {
      var oldRoute;

      oldRoute = null;
      $scope.openDialog = function() {
        return Dialog.show('partials/business_profile.jade');
      };
      return $scope.listingFilter = ListingFilter;
    }
  ]);

  HomeController = module.controller('HomeController', ['$scope', function($scope) {}]);

  ToolbarController = module.controller('ToolbarController', [
    '$scope', '$route', 'ListingFilter', 'User', function($scope, $route, ListingFilter, User) {
      $scope.user = User;
      $scope.userToggles = User.prefs.ui.toggles;
      return $scope.setLayout = function(layout) {
        $scope.userToggles.listing_layout = layout;
        return localStorage.setItem('layout_option', layout);
      };
    }
  ]);

  SearchController = module.controller('SearchController', [
    '$scope', '$location', '$rootScope', 'ListingFilter', function($scope, $location, $rootScope, ListingFilter) {
      return $scope.listingFilter = ListingFilter;
    }
  ]);

  SidebarController = module.controller('SidebarController', ['$scope', function($scope) {}]);

  ListingController = module.controller('ListingController', [
    '$scope', '$location', '$route', '$q', 'Coupons', 'ListingFilter', 'ScrollWatch', 'User', 'Dialog', function($scope, $location, $route, $q, Coupons, ListingFilter, ScrollWatch, User, Dialog) {
      var displayError, lRoute;

      $scope.listingFilter = ListingFilter;
      $scope.userToggles = User.prefs.ui.toggles;
      $scope.listings = [];
      $scope.scrollBottomReached = false;
      $scope.listingFilter.loading = true;
      lRoute = $route.current;
      $scope.$on('$routeChangeStart', function(event, newRoute, oldRoute) {
        return $route.current = lRoute;
      });
      Coupons.getAllListingsByKeyword($route.current.params.keywords).then(function(listings) {
        $scope.gotError = false;
        $scope.allListings = Array.prototype.concat(listings.keywordCouponsList, listings.keywordGroceryList, listings.keywordSdcCouponsList, listings.keywordDealsList);
        $scope.appendListings();
        return $scope.listingFilter.loading = false;
      }, function(error) {
        console.debug(error);
        return displayError(error);
      });
      $scope.$on('scrollLimit', function(ev, data) {
        return $scope.scrollBottomReached = true;
      });
      $scope.getLogoSrc = function() {
        if (this.listing.slugTypeId !== null) {
          if (this.listing.logoImageFileName) {
            return 'http://www.valpak.com/img/print/' + this.listing.logoImageFileName;
          } else {
            return '/img/defaultLogo.png';
          }
        } else {
          if (this.listing.logoImageFileName) {
            return this.listing.logoImageFileName;
          } else if (this.listing.dealImageURL) {
            return this.listing.dealImageURL;
          } else {
            return '/img/defaultLogo.png';
          }
        }
      };
      $scope.appendListings = function() {
        $scope.listings = $scope.listings.concat($scope.allListings.splice(0, 20));
        return $scope.scrollBottomReached = false;
      };
      return displayError = function(error) {
        $scope.listingFilter.loading = false;
        $scope.gotError = true;
        if (error.status === 403) {
          return $scope.errorInfo = "You ain't logged in, bro.";
        } else {
          return $scope.errorInfo = "Sorry, dawg. No can do.";
        }
      };
    }
  ]);

  BusinessProfileController = module.controller('BusinessProfileController', [
    '$scope', '$location', '$route', 'BusinessProfileLoader', function($scope, $location, $route, BusinessProfileLoader) {
      return BusinessProfileLoader($route.current.params.profileId).then(function(profile) {
        $scope.profile = profile;
        return $scope.businessGeo = profile.selectedAddressOffer.geoCoordinates;
      });
    }
  ]);

}).call(this);

/*
//@ sourceMappingURL=controllers.map
*/
