// Generated by CoffeeScript 1.6.2
(function() {
  var module;

  module = angular.module('vp.dropdowns', []);

  module.factory('DropdownMgr', [
    function() {
      var obj, openDropdowns;

      openDropdowns = [];
      obj = {
        addActiveDropdown: function(scope) {
          return openDropdowns.push(scope);
        },
        removeActiveDropdown: function(scope) {
          return openDropdowns.splice(_.indexOf(openDropdowns, scope), 1);
        },
        closeAllDropdowns: function() {
          if (openDropdowns.length > 0) {
            angular.forEach(openDropdowns, function(scope, index) {
              return scope.closeDropdown();
            });
          }
          return openDropdowns = [];
        }
      };
      return obj;
    }
  ]);

  module.directive('dropdownMenu', [
    '$document', '$timeout', 'DropdownMgr', function($document, $timeout, DropdownMgr) {
      return {
        scope: {
          toggle: '@'
        },
        controller: function($scope) {
          $scope.isActive = false;
          $scope.elementHeight = 0;
          return $scope.uid = 'dd-' + Date.now();
        },
        link: function(scope, element, attrs) {
          var delay, toggleActiveState;

          delay = null;
          scope.elementHeight = element.height();
          scope.toggleEvent = angular.isUndefined(scope.toggle) ? 'click' : scope.toggle;
          scope.closeDropdown = function() {
            var fn, phase;

            $timeout.cancel(delay);
            phase = scope.$root.$$phase;
            fn = function() {
              scope.isActive = false;
              $document.unbind('click.' + scope.uid);
              element.removeClass('dropdown-active');
              return DropdownMgr.removeActiveDropdown(scope);
            };
            if (phase === '$apply' || phase === '$digest') {
              return fn();
            } else {
              return scope.$apply(fn);
            }
          };
          toggleActiveState = scope.toggleState = function(event) {
            return scope.$apply(function() {
              scope.isActive = !scope.isActive;
              if (scope.isActive) {
                element.addClass('dropdown-active');
                DropdownMgr.closeAllDropdowns();
                DropdownMgr.addActiveDropdown(scope);
                if (scope.toggleEvent !== 'hover') {
                  $document.bind('click.' + scope.uid, function(ev) {
                    return scope.closeDropdown();
                  });
                }
              } else {
                scope.closeDropdown();
              }
              event.stopPropagation();
              return event.preventDefault();
            });
          };
          element.addClass('vp-dropdown');
          element.children().first().append('<span class="icon-down-open"></span>');
          if (scope.toggleEvent === 'hover') {
            element.bind('mouseenter', function(event) {
              var _this = this;

              $timeout.cancel(delay);
              if (!scope.isActive) {
                return delay = $timeout(function() {
                  var ev;

                  ev = event;
                  return toggleActiveState(ev);
                }, 200, false);
              }
            });
            return element.bind('mouseleave', function(event) {
              var _this = this;

              $timeout.cancel(delay);
              if (scope.isActive) {
                return delay = $timeout(function() {
                  var ev;

                  ev = event;
                  return toggleActiveState(ev);
                }, 400, false);
              }
            });
          } else {
            return element.bind(scope.toggleEvent, toggleActiveState);
          }
        }
      };
    }
  ]);

  module.directive('dropdownOptions', function() {
    return {
      require: '^dropdownMenu',
      link: function(scope, element, attrs) {
        return element.on('click', 'li', function(event) {
          event.stopPropagation();
          return scope.closeDropdown();
        });
      }
    };
  });

}).call(this);

/*
//@ sourceMappingURL=vp.dropdowns.map
*/
