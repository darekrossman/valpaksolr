// Generated by CoffeeScript 1.6.2
(function() {
  var module;

  module = angular.module('app.services', ['ngResource']);

  module.service('User', [
    '$resource', '$q', function($resource, $q) {
      this.username = '';
      this.email = '';
      return this.geo = '';
    }
  ]);

  module.factory('KeywordListings', [
    '$resource', function($resource) {
      return $resource('/api/listings');
    }
  ]);

  module.factory('KeywordListingLoader', [
    'KeywordListings', '$q', '$location', function(KeywordListings, $q, $location) {
      return function(keyword) {
        var delay;

        delay = $q.defer();
        KeywordListings.get({
          keywords: keyword
        }, function(listings) {
          return delay.resolve(listings);
        }, function() {
          return delay.reject('Could not get listings');
        });
        return delay.promise;
      };
    }
  ]);

  module.factory('CategoryListings', [
    '$resource', function($resource) {
      return $resource('/api/listings/:cat', {
        cat: '@cat'
      });
    }
  ]);

  module.factory('CategoryListingsLoader', [
    'CategoryListings', '$q', '$route', '$location', function(CategoryListings, $q, $route, $location) {
      return function(category) {
        var delay;

        delay = $q.defer();
        CategoryListings.save({
          cat: category
        }, function(listings) {
          return delay.resolve(listings);
        }, function(err) {
          return delay.reject(err);
        });
        return delay.promise;
      };
    }
  ]);

  module.service('Coupons', [
    'KeywordListingLoader', 'CategoryListingsLoader', '$q', '$route', '$location', function(KeywordListingLoader, CategoryListingsLoader, $q, $route, $location) {
      var getListings;

      getListings = function() {
        if ($route.current.params.keywords) {
          return KeywordListingLoader($route.current.params.keywords);
        } else {
          return CategoryListingsLoader($route.current.params.category);
        }
      };
      return {
        getAllListings: getListings
      };
    }
  ]);

  module.factory('BusinessProfile', [
    '$resource', function($resource) {
      return $resource('/api/profile/:id', {
        id: '@id'
      });
    }
  ]);

  module.factory('BusinessProfileLoader', [
    'BusinessProfile', '$q', '$route', function(BusinessProfile, $q, $route) {
      return function() {
        var delay;

        delay = $q.defer();
        BusinessProfile.get({
          id: $route.current.params.profileId
        }, function(profile) {
          return delay.resolve(profile);
        }, function() {
          return delay.reject('Could not get profile');
        });
        return delay.promise;
      };
    }
  ]);

  module.service('ListingFilter', [
    '$routeParams', function($routeParams) {
      return {
        searchTerms: null,
        loading: true,
        layoutOption: localStorage.getItem('layout_option') || 'grid'
      };
    }
  ]);

  module.factory('ScrollWatch', [
    '$rootScope', function($rootScope) {
      var scrollLimit;

      scrollLimit = function(el) {
        return $rootScope.$broadcast('scrollLimit', el);
      };
      return {
        scrollLimit: scrollLimit
      };
    }
  ]);

  module.factory('Facebook', [
    '$rootScope', '$window', '$q', function($rootScope, $window, $q) {
      var defer;

      defer = $q.defer();
      $window.fbAsyncInit = function() {
        FB.init({
          appId: '130720057130864',
          channelUrl: '//darek.io/channel.html',
          status: true,
          cookie: true,
          xfbml: true
        });
        return defer.resolve(FB);
      };
      return defer.promise;
    }
  ]);

}).call(this);

/*
//@ sourceMappingURL=services.map
*/
